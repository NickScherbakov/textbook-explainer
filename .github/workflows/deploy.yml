name: Deploy to Yandex Cloud

on:
  push:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Yandex Container Registry
        uses: docker/login-action@v1
        with:
          registry: cr.yandex
          username: ${{ secrets.YANDEX_CLOUD_SERVICE_ACCOUNT_ID }}
          password: ${{ secrets.YANDEX_CLOUD_IAM_TOKEN }}

      - name: Build and push upload-service
        uses: docker/build-push-action@v2
        with:
          context: ./services/upload-service
          push: true
          tags: cr.yandex/textbook-explainer/upload-service:latest

      - name: Build and push ocr-service
        uses: docker/build-push-action@v2
        with:
          context: ./services/ocr-service
          push: true
          tags: cr.yandex/textbook-explainer/ocr-service:latest
      
      - name: Build and push nlp-service
        uses: docker/build-push-action@v2
        with:
          context: ./services/nlp-service
          push: true
          tags: cr.yandex/textbook-explainer/nlp-service:latest

      - name: Build and push dialog-service
        uses: docker/build-push-action@v2
        with:
          context: ./services/dialog-service
          push: true
          tags: cr.yandex/textbook-explainer/dialog-service:latest

      - name: Build and push voice-service
        uses: docker/build-push-action@v2
        with:
          context: ./services/voice-service
          push: true
          tags: cr.yandex/textbook-explainer/voice-service:latest

      - name: Build and push frontend
        uses: docker/build-push-action@v2
        with:
          context: ./frontend
          push: true
          tags: cr.yandex/textbook-explainer/frontend:latest

      - name: Setup kubectl
        uses: azure/setup-kubectl@v1

      - name: Deploy to Kubernetes
        run: |
          mkdir ~/.kube
          echo "${{ secrets.KUBE_CONFIG }}" > ~/.kube/config
          kubectl apply -f ./infrastructure/kubernetes/deployments/
          kubectl apply -f ./infrastructure/kubernetes/services/
          kubectl apply -f ./infrastructure/kubernetes/config-maps/
